/*
 * Copyright (c) 2002, Vanderbilt University
 * All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software and its
 * documentation for any purpose, without fee, and without written agreement is
 * hereby granted, provided that the above copyright notice, the following
 * two paragraphs and the author appear in all copies of this software.
 * 
 * IN NO EVENT SHALL THE VANDERBILT UNIVERSITY BE LIABLE TO ANY PARTY FOR
 * DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING OUT
 * OF THE USE OF THIS SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE VANDERBILT
 * UNIVERSITY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * THE VANDERBILT UNIVERSITY SPECIFICALLY DISCLAIMS ANY WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS
 * ON AN "AS IS" BASIS, AND THE VANDERBILT UNIVERSITY HAS NO OBLIGATION TO
 * PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.
 *
 * Author: Miklos Maroti, Gyorgy Balogh
 * Date last modified: 10/23/03
 */

/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_isis_jaut_Variant */

#ifndef _Included_org_isis_jaut_Variant
#define _Included_org_isis_jaut_Variant
#ifdef __cplusplus
extern "C" {
#endif
#undef org_isis_jaut_Variant_VT_EMPTY
#define org_isis_jaut_Variant_VT_EMPTY 0L
#undef org_isis_jaut_Variant_VT_NULL
#define org_isis_jaut_Variant_VT_NULL 1L
#undef org_isis_jaut_Variant_VT_I2
#define org_isis_jaut_Variant_VT_I2 2L
#undef org_isis_jaut_Variant_VT_I4
#define org_isis_jaut_Variant_VT_I4 3L
#undef org_isis_jaut_Variant_VT_R4
#define org_isis_jaut_Variant_VT_R4 4L
#undef org_isis_jaut_Variant_VT_R8
#define org_isis_jaut_Variant_VT_R8 5L
#undef org_isis_jaut_Variant_VT_CY
#define org_isis_jaut_Variant_VT_CY 6L
#undef org_isis_jaut_Variant_VT_DATE
#define org_isis_jaut_Variant_VT_DATE 7L
#undef org_isis_jaut_Variant_VT_BSTR
#define org_isis_jaut_Variant_VT_BSTR 8L
#undef org_isis_jaut_Variant_VT_DISPATCH
#define org_isis_jaut_Variant_VT_DISPATCH 9L
#undef org_isis_jaut_Variant_VT_ERROR
#define org_isis_jaut_Variant_VT_ERROR 10L
#undef org_isis_jaut_Variant_VT_BOOL
#define org_isis_jaut_Variant_VT_BOOL 11L
#undef org_isis_jaut_Variant_VT_VARIANT
#define org_isis_jaut_Variant_VT_VARIANT 12L
#undef org_isis_jaut_Variant_VT_UNKNOWN
#define org_isis_jaut_Variant_VT_UNKNOWN 13L
#undef org_isis_jaut_Variant_VT_DECIMAL
#define org_isis_jaut_Variant_VT_DECIMAL 14L
#undef org_isis_jaut_Variant_VT_I1
#define org_isis_jaut_Variant_VT_I1 16L
#undef org_isis_jaut_Variant_VT_UI1
#define org_isis_jaut_Variant_VT_UI1 17L
#undef org_isis_jaut_Variant_VT_UI2
#define org_isis_jaut_Variant_VT_UI2 18L
#undef org_isis_jaut_Variant_VT_UI4
#define org_isis_jaut_Variant_VT_UI4 19L
#undef org_isis_jaut_Variant_VT_INT
#define org_isis_jaut_Variant_VT_INT 22L
#undef org_isis_jaut_Variant_VT_UINT
#define org_isis_jaut_Variant_VT_UINT 23L
#undef org_isis_jaut_Variant_VT_ARRAY
#define org_isis_jaut_Variant_VT_ARRAY 8192L
#undef org_isis_jaut_Variant_VT_BYREF
#define org_isis_jaut_Variant_VT_BYREF 16384L
#undef org_isis_jaut_Variant_VARIANT_NOVALUEPROP
#define org_isis_jaut_Variant_VARIANT_NOVALUEPROP 1L
#undef org_isis_jaut_Variant_VARIANT_ALPHABOOL
#define org_isis_jaut_Variant_VARIANT_ALPHABOOL 2L
#undef org_isis_jaut_Variant_VARIANT_NOUSEROVERRIDE
#define org_isis_jaut_Variant_VARIANT_NOUSEROVERRIDE 4L
#undef org_isis_jaut_Variant_VARIANT_LOCALBOOL
#define org_isis_jaut_Variant_VARIANT_LOCALBOOL 16L
#undef org_isis_jaut_Variant_SUN_MINUS_MICROSOFT
#define org_isis_jaut_Variant_SUN_MINUS_MICROSOFT 25569L
#undef org_isis_jaut_Variant_MILLISECONDS_IN_DAY
#define org_isis_jaut_Variant_MILLISECONDS_IN_DAY 86400000i64
/* Inaccessible static: defaultChangeFlags */
/*
 * Class:     org_isis_jaut_Variant
 * Method:    allocate
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_allocate
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    release
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_release
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getVartype
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_isis_jaut_Variant_getVartype
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    changeType
 * Signature: (Lorg/isis/jaut/Variant;II)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_changeType
  (JNIEnv *, jobject, jobject, jint, jint);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    clear
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_clear
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    copy
 * Signature: (Lorg/isis/jaut/Variant;)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_copy
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    copyInd
 * Signature: (Lorg/isis/jaut/Variant;)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_copyInd
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getBoolean
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_org_isis_jaut_Variant_getBoolean
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setBoolean
 * Signature: (Z)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setBoolean
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getByte
 * Signature: ()B
 */
JNIEXPORT jbyte JNICALL Java_org_isis_jaut_Variant_getByte
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setByte
 * Signature: (B)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setByte
  (JNIEnv *, jobject, jbyte);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getShort
 * Signature: ()S
 */
JNIEXPORT jshort JNICALL Java_org_isis_jaut_Variant_getShort
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setShort
 * Signature: (S)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setShort
  (JNIEnv *, jobject, jshort);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getInt
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_isis_jaut_Variant_getInt
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setInt
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setInt
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getLong
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_org_isis_jaut_Variant_getLong
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setLong
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setLong
  (JNIEnv *, jobject, jlong);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getFloat
 * Signature: ()F
 */
JNIEXPORT jfloat JNICALL Java_org_isis_jaut_Variant_getFloat
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setFloat
 * Signature: (F)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setFloat
  (JNIEnv *, jobject, jfloat);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getDouble
 * Signature: ()D
 */
JNIEXPORT jdouble JNICALL Java_org_isis_jaut_Variant_getDouble
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setDouble
 * Signature: (D)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setDouble
  (JNIEnv *, jobject, jdouble);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    getString
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_org_isis_jaut_Variant_getString
  (JNIEnv *, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setString
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setString
  (JNIEnv *, jobject, jstring);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    setDispatch
 * Signature: (Lorg/isis/jaut/Dispatch;)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_setDispatch
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    allocateArray
 * Signature: (I[I[I)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_allocateArray
  (JNIEnv *, jobject, jint, jintArray, jintArray);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    allocateReference
 * Signature: (ILorg/isis/jaut/Variant;)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_allocateReference__ILorg_isis_jaut_Variant_2
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     org_isis_jaut_Variant
 * Method:    allocateReference
 * Signature: (ILorg/isis/jaut/SafeArray;I)V
 */
JNIEXPORT void JNICALL Java_org_isis_jaut_Variant_allocateReference__ILorg_isis_jaut_SafeArray_2I
  (JNIEnv *, jobject, jint, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
